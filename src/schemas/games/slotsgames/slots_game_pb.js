// source: games/slotsgames/slots_game.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var games_slotsgames_asymmetric_reels_slots_game_pb = require('../../games/slotsgames/asymmetric_reels_slots_game_pb.js');
goog.object.extend(proto, games_slotsgames_asymmetric_reels_slots_game_pb);
var games_slotsgames_accumulate_multiplier_slots_game_pb = require('../../games/slotsgames/accumulate_multiplier_slots_game_pb.js');
goog.object.extend(proto, games_slotsgames_accumulate_multiplier_slots_game_pb);
var games_slotsgames_scatter_prize_pb = require('../../games/slotsgames/scatter_prize_pb.js');
goog.object.extend(proto, games_slotsgames_scatter_prize_pb);
var games_slotsgames_symbol_pb = require('../../games/slotsgames/symbol_pb.js');
goog.object.extend(proto, games_slotsgames_symbol_pb);
var games_slotsgames_payline_pb = require('../../games/slotsgames/payline_pb.js');
goog.object.extend(proto, games_slotsgames_payline_pb);
goog.exportSymbol('proto.schema.PaylineSlotsGameModel', null, global);
goog.exportSymbol('proto.schema.PaylineSlotsGameModel.GameCase', null, global);
goog.exportSymbol('proto.schema.SlotsGameModel', null, global);
goog.exportSymbol('proto.schema.SlotsGameModel.GameCase', null, global);
goog.exportSymbol('proto.schema.WaySlotsGameModel', null, global);
goog.exportSymbol('proto.schema.WaySlotsGameModel.GameCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.schema.SlotsGameModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.schema.SlotsGameModel.repeatedFields_, proto.schema.SlotsGameModel.oneofGroups_);
};
goog.inherits(proto.schema.SlotsGameModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.schema.SlotsGameModel.displayName = 'proto.schema.SlotsGameModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.schema.PaylineSlotsGameModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.schema.PaylineSlotsGameModel.repeatedFields_, proto.schema.PaylineSlotsGameModel.oneofGroups_);
};
goog.inherits(proto.schema.PaylineSlotsGameModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.schema.PaylineSlotsGameModel.displayName = 'proto.schema.PaylineSlotsGameModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.schema.WaySlotsGameModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.schema.WaySlotsGameModel.oneofGroups_);
};
goog.inherits(proto.schema.WaySlotsGameModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.schema.WaySlotsGameModel.displayName = 'proto.schema.WaySlotsGameModel';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.schema.SlotsGameModel.repeatedFields_ = [1,2,3,4,5];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.schema.SlotsGameModel.oneofGroups_ = [[6,7]];

/**
 * @enum {number}
 */
proto.schema.SlotsGameModel.GameCase = {
  GAME_NOT_SET: 0,
  PAYLINE_SLOTS_GAME: 6,
  WAY_SLOTS_GAME: 7
};

/**
 * @return {proto.schema.SlotsGameModel.GameCase}
 */
proto.schema.SlotsGameModel.prototype.getGameCase = function() {
  return /** @type {proto.schema.SlotsGameModel.GameCase} */(jspb.Message.computeOneofCase(this, proto.schema.SlotsGameModel.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.schema.SlotsGameModel.prototype.toObject = function(opt_includeInstance) {
  return proto.schema.SlotsGameModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.schema.SlotsGameModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.SlotsGameModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    slotsSymbolList: jspb.Message.toObjectList(msg.getSlotsSymbolList(),
    games_slotsgames_symbol_pb.SlotsGameSymbolModel.toObject, includeInstance),
    goldCoinsBetValuesList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f,
    sweepCoinsBetValuesList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 3)) == null ? undefined : f,
    rowCountsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    scatterPrizesList: jspb.Message.toObjectList(msg.getScatterPrizesList(),
    games_slotsgames_scatter_prize_pb.ScatterPrizeModel.toObject, includeInstance),
    paylineSlotsGame: (f = msg.getPaylineSlotsGame()) && proto.schema.PaylineSlotsGameModel.toObject(includeInstance, f),
    waySlotsGame: (f = msg.getWaySlotsGame()) && proto.schema.WaySlotsGameModel.toObject(includeInstance, f),
    goldCoinJackpotPool: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    sweepCoinJackpotPool: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.schema.SlotsGameModel}
 */
proto.schema.SlotsGameModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.schema.SlotsGameModel;
  return proto.schema.SlotsGameModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.schema.SlotsGameModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.schema.SlotsGameModel}
 */
proto.schema.SlotsGameModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new games_slotsgames_symbol_pb.SlotsGameSymbolModel;
      reader.readMessage(value,games_slotsgames_symbol_pb.SlotsGameSymbolModel.deserializeBinaryFromReader);
      msg.addSlotsSymbol(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addGoldCoinsBetValues(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSweepCoinsBetValues(values[i]);
      }
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRowCounts(values[i]);
      }
      break;
    case 5:
      var value = new games_slotsgames_scatter_prize_pb.ScatterPrizeModel;
      reader.readMessage(value,games_slotsgames_scatter_prize_pb.ScatterPrizeModel.deserializeBinaryFromReader);
      msg.addScatterPrizes(value);
      break;
    case 6:
      var value = new proto.schema.PaylineSlotsGameModel;
      reader.readMessage(value,proto.schema.PaylineSlotsGameModel.deserializeBinaryFromReader);
      msg.setPaylineSlotsGame(value);
      break;
    case 7:
      var value = new proto.schema.WaySlotsGameModel;
      reader.readMessage(value,proto.schema.WaySlotsGameModel.deserializeBinaryFromReader);
      msg.setWaySlotsGame(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGoldCoinJackpotPool(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSweepCoinJackpotPool(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.schema.SlotsGameModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.schema.SlotsGameModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.schema.SlotsGameModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.SlotsGameModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlotsSymbolList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      games_slotsgames_symbol_pb.SlotsGameSymbolModel.serializeBinaryToWriter
    );
  }
  f = message.getGoldCoinsBetValuesList();
  if (f.length > 0) {
    writer.writePackedDouble(
      2,
      f
    );
  }
  f = message.getSweepCoinsBetValuesList();
  if (f.length > 0) {
    writer.writePackedDouble(
      3,
      f
    );
  }
  f = message.getRowCountsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      4,
      f
    );
  }
  f = message.getScatterPrizesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      games_slotsgames_scatter_prize_pb.ScatterPrizeModel.serializeBinaryToWriter
    );
  }
  f = message.getPaylineSlotsGame();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.schema.PaylineSlotsGameModel.serializeBinaryToWriter
    );
  }
  f = message.getWaySlotsGame();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.schema.WaySlotsGameModel.serializeBinaryToWriter
    );
  }
  f = message.getGoldCoinJackpotPool();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getSweepCoinJackpotPool();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
};


/**
 * repeated SlotsGameSymbolModel slots_symbol = 1;
 * @return {!Array<!proto.schema.SlotsGameSymbolModel>}
 */
proto.schema.SlotsGameModel.prototype.getSlotsSymbolList = function() {
  return /** @type{!Array<!proto.schema.SlotsGameSymbolModel>} */ (
    jspb.Message.getRepeatedWrapperField(this, games_slotsgames_symbol_pb.SlotsGameSymbolModel, 1));
};


/**
 * @param {!Array<!proto.schema.SlotsGameSymbolModel>} value
 * @return {!proto.schema.SlotsGameModel} returns this
*/
proto.schema.SlotsGameModel.prototype.setSlotsSymbolList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.schema.SlotsGameSymbolModel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.schema.SlotsGameSymbolModel}
 */
proto.schema.SlotsGameModel.prototype.addSlotsSymbol = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.schema.SlotsGameSymbolModel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.schema.SlotsGameModel} returns this
 */
proto.schema.SlotsGameModel.prototype.clearSlotsSymbolList = function() {
  return this.setSlotsSymbolList([]);
};


/**
 * repeated double gold_coins_bet_values = 2;
 * @return {!Array<number>}
 */
proto.schema.SlotsGameModel.prototype.getGoldCoinsBetValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.schema.SlotsGameModel} returns this
 */
proto.schema.SlotsGameModel.prototype.setGoldCoinsBetValuesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.schema.SlotsGameModel} returns this
 */
proto.schema.SlotsGameModel.prototype.addGoldCoinsBetValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.schema.SlotsGameModel} returns this
 */
proto.schema.SlotsGameModel.prototype.clearGoldCoinsBetValuesList = function() {
  return this.setGoldCoinsBetValuesList([]);
};


/**
 * repeated double sweep_coins_bet_values = 3;
 * @return {!Array<number>}
 */
proto.schema.SlotsGameModel.prototype.getSweepCoinsBetValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.schema.SlotsGameModel} returns this
 */
proto.schema.SlotsGameModel.prototype.setSweepCoinsBetValuesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.schema.SlotsGameModel} returns this
 */
proto.schema.SlotsGameModel.prototype.addSweepCoinsBetValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.schema.SlotsGameModel} returns this
 */
proto.schema.SlotsGameModel.prototype.clearSweepCoinsBetValuesList = function() {
  return this.setSweepCoinsBetValuesList([]);
};


/**
 * repeated int32 row_counts = 4;
 * @return {!Array<number>}
 */
proto.schema.SlotsGameModel.prototype.getRowCountsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.schema.SlotsGameModel} returns this
 */
proto.schema.SlotsGameModel.prototype.setRowCountsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.schema.SlotsGameModel} returns this
 */
proto.schema.SlotsGameModel.prototype.addRowCounts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.schema.SlotsGameModel} returns this
 */
proto.schema.SlotsGameModel.prototype.clearRowCountsList = function() {
  return this.setRowCountsList([]);
};


/**
 * repeated ScatterPrizeModel scatter_prizes = 5;
 * @return {!Array<!proto.schema.ScatterPrizeModel>}
 */
proto.schema.SlotsGameModel.prototype.getScatterPrizesList = function() {
  return /** @type{!Array<!proto.schema.ScatterPrizeModel>} */ (
    jspb.Message.getRepeatedWrapperField(this, games_slotsgames_scatter_prize_pb.ScatterPrizeModel, 5));
};


/**
 * @param {!Array<!proto.schema.ScatterPrizeModel>} value
 * @return {!proto.schema.SlotsGameModel} returns this
*/
proto.schema.SlotsGameModel.prototype.setScatterPrizesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.schema.ScatterPrizeModel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.schema.ScatterPrizeModel}
 */
proto.schema.SlotsGameModel.prototype.addScatterPrizes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.schema.ScatterPrizeModel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.schema.SlotsGameModel} returns this
 */
proto.schema.SlotsGameModel.prototype.clearScatterPrizesList = function() {
  return this.setScatterPrizesList([]);
};


/**
 * optional PaylineSlotsGameModel payline_slots_game = 6;
 * @return {?proto.schema.PaylineSlotsGameModel}
 */
proto.schema.SlotsGameModel.prototype.getPaylineSlotsGame = function() {
  return /** @type{?proto.schema.PaylineSlotsGameModel} */ (
    jspb.Message.getWrapperField(this, proto.schema.PaylineSlotsGameModel, 6));
};


/**
 * @param {?proto.schema.PaylineSlotsGameModel|undefined} value
 * @return {!proto.schema.SlotsGameModel} returns this
*/
proto.schema.SlotsGameModel.prototype.setPaylineSlotsGame = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.schema.SlotsGameModel.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.schema.SlotsGameModel} returns this
 */
proto.schema.SlotsGameModel.prototype.clearPaylineSlotsGame = function() {
  return this.setPaylineSlotsGame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.schema.SlotsGameModel.prototype.hasPaylineSlotsGame = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional WaySlotsGameModel way_slots_game = 7;
 * @return {?proto.schema.WaySlotsGameModel}
 */
proto.schema.SlotsGameModel.prototype.getWaySlotsGame = function() {
  return /** @type{?proto.schema.WaySlotsGameModel} */ (
    jspb.Message.getWrapperField(this, proto.schema.WaySlotsGameModel, 7));
};


/**
 * @param {?proto.schema.WaySlotsGameModel|undefined} value
 * @return {!proto.schema.SlotsGameModel} returns this
*/
proto.schema.SlotsGameModel.prototype.setWaySlotsGame = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.schema.SlotsGameModel.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.schema.SlotsGameModel} returns this
 */
proto.schema.SlotsGameModel.prototype.clearWaySlotsGame = function() {
  return this.setWaySlotsGame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.schema.SlotsGameModel.prototype.hasWaySlotsGame = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double gold_coin_jackpot_pool = 8;
 * @return {number}
 */
proto.schema.SlotsGameModel.prototype.getGoldCoinJackpotPool = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.schema.SlotsGameModel} returns this
 */
proto.schema.SlotsGameModel.prototype.setGoldCoinJackpotPool = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double sweep_coin_jackpot_pool = 9;
 * @return {number}
 */
proto.schema.SlotsGameModel.prototype.getSweepCoinJackpotPool = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.schema.SlotsGameModel} returns this
 */
proto.schema.SlotsGameModel.prototype.setSweepCoinJackpotPool = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.schema.PaylineSlotsGameModel.repeatedFields_ = [1];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.schema.PaylineSlotsGameModel.oneofGroups_ = [[2]];

/**
 * @enum {number}
 */
proto.schema.PaylineSlotsGameModel.GameCase = {
  GAME_NOT_SET: 0,
  ASYMMETRIC_REELS_SLOTS_GAME: 2
};

/**
 * @return {proto.schema.PaylineSlotsGameModel.GameCase}
 */
proto.schema.PaylineSlotsGameModel.prototype.getGameCase = function() {
  return /** @type {proto.schema.PaylineSlotsGameModel.GameCase} */(jspb.Message.computeOneofCase(this, proto.schema.PaylineSlotsGameModel.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.schema.PaylineSlotsGameModel.prototype.toObject = function(opt_includeInstance) {
  return proto.schema.PaylineSlotsGameModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.schema.PaylineSlotsGameModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.PaylineSlotsGameModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    paylinesList: jspb.Message.toObjectList(msg.getPaylinesList(),
    games_slotsgames_payline_pb.PaylineModel.toObject, includeInstance),
    asymmetricReelsSlotsGame: (f = msg.getAsymmetricReelsSlotsGame()) && games_slotsgames_asymmetric_reels_slots_game_pb.AsymmetricReelsSlotsGameModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.schema.PaylineSlotsGameModel}
 */
proto.schema.PaylineSlotsGameModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.schema.PaylineSlotsGameModel;
  return proto.schema.PaylineSlotsGameModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.schema.PaylineSlotsGameModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.schema.PaylineSlotsGameModel}
 */
proto.schema.PaylineSlotsGameModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new games_slotsgames_payline_pb.PaylineModel;
      reader.readMessage(value,games_slotsgames_payline_pb.PaylineModel.deserializeBinaryFromReader);
      msg.addPaylines(value);
      break;
    case 2:
      var value = new games_slotsgames_asymmetric_reels_slots_game_pb.AsymmetricReelsSlotsGameModel;
      reader.readMessage(value,games_slotsgames_asymmetric_reels_slots_game_pb.AsymmetricReelsSlotsGameModel.deserializeBinaryFromReader);
      msg.setAsymmetricReelsSlotsGame(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.schema.PaylineSlotsGameModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.schema.PaylineSlotsGameModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.schema.PaylineSlotsGameModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.PaylineSlotsGameModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaylinesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      games_slotsgames_payline_pb.PaylineModel.serializeBinaryToWriter
    );
  }
  f = message.getAsymmetricReelsSlotsGame();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      games_slotsgames_asymmetric_reels_slots_game_pb.AsymmetricReelsSlotsGameModel.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PaylineModel paylines = 1;
 * @return {!Array<!proto.schema.PaylineModel>}
 */
proto.schema.PaylineSlotsGameModel.prototype.getPaylinesList = function() {
  return /** @type{!Array<!proto.schema.PaylineModel>} */ (
    jspb.Message.getRepeatedWrapperField(this, games_slotsgames_payline_pb.PaylineModel, 1));
};


/**
 * @param {!Array<!proto.schema.PaylineModel>} value
 * @return {!proto.schema.PaylineSlotsGameModel} returns this
*/
proto.schema.PaylineSlotsGameModel.prototype.setPaylinesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.schema.PaylineModel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.schema.PaylineModel}
 */
proto.schema.PaylineSlotsGameModel.prototype.addPaylines = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.schema.PaylineModel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.schema.PaylineSlotsGameModel} returns this
 */
proto.schema.PaylineSlotsGameModel.prototype.clearPaylinesList = function() {
  return this.setPaylinesList([]);
};


/**
 * optional AsymmetricReelsSlotsGameModel asymmetric_reels_slots_game = 2;
 * @return {?proto.schema.AsymmetricReelsSlotsGameModel}
 */
proto.schema.PaylineSlotsGameModel.prototype.getAsymmetricReelsSlotsGame = function() {
  return /** @type{?proto.schema.AsymmetricReelsSlotsGameModel} */ (
    jspb.Message.getWrapperField(this, games_slotsgames_asymmetric_reels_slots_game_pb.AsymmetricReelsSlotsGameModel, 2));
};


/**
 * @param {?proto.schema.AsymmetricReelsSlotsGameModel|undefined} value
 * @return {!proto.schema.PaylineSlotsGameModel} returns this
*/
proto.schema.PaylineSlotsGameModel.prototype.setAsymmetricReelsSlotsGame = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.schema.PaylineSlotsGameModel.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.schema.PaylineSlotsGameModel} returns this
 */
proto.schema.PaylineSlotsGameModel.prototype.clearAsymmetricReelsSlotsGame = function() {
  return this.setAsymmetricReelsSlotsGame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.schema.PaylineSlotsGameModel.prototype.hasAsymmetricReelsSlotsGame = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.schema.WaySlotsGameModel.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.schema.WaySlotsGameModel.GameCase = {
  GAME_NOT_SET: 0,
  ACCUMULATE_MULTIPLIER_SLOTS_GAME: 1
};

/**
 * @return {proto.schema.WaySlotsGameModel.GameCase}
 */
proto.schema.WaySlotsGameModel.prototype.getGameCase = function() {
  return /** @type {proto.schema.WaySlotsGameModel.GameCase} */(jspb.Message.computeOneofCase(this, proto.schema.WaySlotsGameModel.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.schema.WaySlotsGameModel.prototype.toObject = function(opt_includeInstance) {
  return proto.schema.WaySlotsGameModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.schema.WaySlotsGameModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.WaySlotsGameModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    accumulateMultiplierSlotsGame: (f = msg.getAccumulateMultiplierSlotsGame()) && games_slotsgames_accumulate_multiplier_slots_game_pb.AccumulateMultiplierSlotsGameModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.schema.WaySlotsGameModel}
 */
proto.schema.WaySlotsGameModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.schema.WaySlotsGameModel;
  return proto.schema.WaySlotsGameModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.schema.WaySlotsGameModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.schema.WaySlotsGameModel}
 */
proto.schema.WaySlotsGameModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new games_slotsgames_accumulate_multiplier_slots_game_pb.AccumulateMultiplierSlotsGameModel;
      reader.readMessage(value,games_slotsgames_accumulate_multiplier_slots_game_pb.AccumulateMultiplierSlotsGameModel.deserializeBinaryFromReader);
      msg.setAccumulateMultiplierSlotsGame(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.schema.WaySlotsGameModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.schema.WaySlotsGameModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.schema.WaySlotsGameModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.WaySlotsGameModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccumulateMultiplierSlotsGame();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      games_slotsgames_accumulate_multiplier_slots_game_pb.AccumulateMultiplierSlotsGameModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional AccumulateMultiplierSlotsGameModel accumulate_multiplier_slots_game = 1;
 * @return {?proto.schema.AccumulateMultiplierSlotsGameModel}
 */
proto.schema.WaySlotsGameModel.prototype.getAccumulateMultiplierSlotsGame = function() {
  return /** @type{?proto.schema.AccumulateMultiplierSlotsGameModel} */ (
    jspb.Message.getWrapperField(this, games_slotsgames_accumulate_multiplier_slots_game_pb.AccumulateMultiplierSlotsGameModel, 1));
};


/**
 * @param {?proto.schema.AccumulateMultiplierSlotsGameModel|undefined} value
 * @return {!proto.schema.WaySlotsGameModel} returns this
*/
proto.schema.WaySlotsGameModel.prototype.setAccumulateMultiplierSlotsGame = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.schema.WaySlotsGameModel.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.schema.WaySlotsGameModel} returns this
 */
proto.schema.WaySlotsGameModel.prototype.clearAccumulateMultiplierSlotsGame = function() {
  return this.setAccumulateMultiplierSlotsGame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.schema.WaySlotsGameModel.prototype.hasAccumulateMultiplierSlotsGame = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.schema);
