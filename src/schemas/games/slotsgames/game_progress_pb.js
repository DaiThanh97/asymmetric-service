// source: games/slotsgames/game_progress.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var games_slotsgames_symbol_pb = require('../../games/slotsgames/symbol_pb.js');
goog.object.extend(proto, games_slotsgames_symbol_pb);
var games_slotsgames_payline_pb = require('../../games/slotsgames/payline_pb.js');
goog.object.extend(proto, games_slotsgames_payline_pb);
goog.exportSymbol('proto.schema.AccumulateMultiplierSlotsGameProgressModel', null, global);
goog.exportSymbol('proto.schema.AsymmetricReelsSlotsGameProgressModel', null, global);
goog.exportSymbol('proto.schema.PaylineSlotsGameProgressModel', null, global);
goog.exportSymbol('proto.schema.PaylineSlotsGameProgressModel.ProgressCase', null, global);
goog.exportSymbol('proto.schema.SlotsGameProgressModel', null, global);
goog.exportSymbol('proto.schema.SlotsGameProgressModel.ProgressCase', null, global);
goog.exportSymbol('proto.schema.WaySlotsGameProgressModel', null, global);
goog.exportSymbol('proto.schema.WaySlotsGameProgressModel.ProgressCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.schema.SlotsGameProgressModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.schema.SlotsGameProgressModel.oneofGroups_);
};
goog.inherits(proto.schema.SlotsGameProgressModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.schema.SlotsGameProgressModel.displayName = 'proto.schema.SlotsGameProgressModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.schema.PaylineSlotsGameProgressModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.schema.PaylineSlotsGameProgressModel.repeatedFields_, proto.schema.PaylineSlotsGameProgressModel.oneofGroups_);
};
goog.inherits(proto.schema.PaylineSlotsGameProgressModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.schema.PaylineSlotsGameProgressModel.displayName = 'proto.schema.PaylineSlotsGameProgressModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.schema.WaySlotsGameProgressModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.schema.WaySlotsGameProgressModel.oneofGroups_);
};
goog.inherits(proto.schema.WaySlotsGameProgressModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.schema.WaySlotsGameProgressModel.displayName = 'proto.schema.WaySlotsGameProgressModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.schema.AsymmetricReelsSlotsGameProgressModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.schema.AsymmetricReelsSlotsGameProgressModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.schema.AsymmetricReelsSlotsGameProgressModel.displayName = 'proto.schema.AsymmetricReelsSlotsGameProgressModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.schema.AccumulateMultiplierSlotsGameProgressModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.schema.AccumulateMultiplierSlotsGameProgressModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.schema.AccumulateMultiplierSlotsGameProgressModel.displayName = 'proto.schema.AccumulateMultiplierSlotsGameProgressModel';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.schema.SlotsGameProgressModel.oneofGroups_ = [[4,5]];

/**
 * @enum {number}
 */
proto.schema.SlotsGameProgressModel.ProgressCase = {
  PROGRESS_NOT_SET: 0,
  PAYLINE_SLOTS_GAME_PROGRESS: 4,
  WAY_SLOTS_GAME_PROGRESS: 5
};

/**
 * @return {proto.schema.SlotsGameProgressModel.ProgressCase}
 */
proto.schema.SlotsGameProgressModel.prototype.getProgressCase = function() {
  return /** @type {proto.schema.SlotsGameProgressModel.ProgressCase} */(jspb.Message.computeOneofCase(this, proto.schema.SlotsGameProgressModel.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.schema.SlotsGameProgressModel.prototype.toObject = function(opt_includeInstance) {
  return proto.schema.SlotsGameProgressModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.schema.SlotsGameProgressModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.SlotsGameProgressModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentBet: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    freeSpinsAvailable: jspb.Message.getFieldWithDefault(msg, 2, 0),
    freeSpinsPrizeMultiplier: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    paylineSlotsGameProgress: (f = msg.getPaylineSlotsGameProgress()) && proto.schema.PaylineSlotsGameProgressModel.toObject(includeInstance, f),
    waySlotsGameProgress: (f = msg.getWaySlotsGameProgress()) && proto.schema.WaySlotsGameProgressModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.schema.SlotsGameProgressModel}
 */
proto.schema.SlotsGameProgressModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.schema.SlotsGameProgressModel;
  return proto.schema.SlotsGameProgressModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.schema.SlotsGameProgressModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.schema.SlotsGameProgressModel}
 */
proto.schema.SlotsGameProgressModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurrentBet(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFreeSpinsAvailable(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFreeSpinsPrizeMultiplier(value);
      break;
    case 4:
      var value = new proto.schema.PaylineSlotsGameProgressModel;
      reader.readMessage(value,proto.schema.PaylineSlotsGameProgressModel.deserializeBinaryFromReader);
      msg.setPaylineSlotsGameProgress(value);
      break;
    case 5:
      var value = new proto.schema.WaySlotsGameProgressModel;
      reader.readMessage(value,proto.schema.WaySlotsGameProgressModel.deserializeBinaryFromReader);
      msg.setWaySlotsGameProgress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.schema.SlotsGameProgressModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.schema.SlotsGameProgressModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.schema.SlotsGameProgressModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.SlotsGameProgressModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentBet();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getFreeSpinsAvailable();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getFreeSpinsPrizeMultiplier();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getPaylineSlotsGameProgress();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.schema.PaylineSlotsGameProgressModel.serializeBinaryToWriter
    );
  }
  f = message.getWaySlotsGameProgress();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.schema.WaySlotsGameProgressModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional double current_bet = 1;
 * @return {number}
 */
proto.schema.SlotsGameProgressModel.prototype.getCurrentBet = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.schema.SlotsGameProgressModel} returns this
 */
proto.schema.SlotsGameProgressModel.prototype.setCurrentBet = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional int32 free_spins_available = 2;
 * @return {number}
 */
proto.schema.SlotsGameProgressModel.prototype.getFreeSpinsAvailable = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.schema.SlotsGameProgressModel} returns this
 */
proto.schema.SlotsGameProgressModel.prototype.setFreeSpinsAvailable = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional double free_spins_prize_multiplier = 3;
 * @return {number}
 */
proto.schema.SlotsGameProgressModel.prototype.getFreeSpinsPrizeMultiplier = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.schema.SlotsGameProgressModel} returns this
 */
proto.schema.SlotsGameProgressModel.prototype.setFreeSpinsPrizeMultiplier = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional PaylineSlotsGameProgressModel payline_slots_game_progress = 4;
 * @return {?proto.schema.PaylineSlotsGameProgressModel}
 */
proto.schema.SlotsGameProgressModel.prototype.getPaylineSlotsGameProgress = function() {
  return /** @type{?proto.schema.PaylineSlotsGameProgressModel} */ (
    jspb.Message.getWrapperField(this, proto.schema.PaylineSlotsGameProgressModel, 4));
};


/**
 * @param {?proto.schema.PaylineSlotsGameProgressModel|undefined} value
 * @return {!proto.schema.SlotsGameProgressModel} returns this
*/
proto.schema.SlotsGameProgressModel.prototype.setPaylineSlotsGameProgress = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.schema.SlotsGameProgressModel.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.schema.SlotsGameProgressModel} returns this
 */
proto.schema.SlotsGameProgressModel.prototype.clearPaylineSlotsGameProgress = function() {
  return this.setPaylineSlotsGameProgress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.schema.SlotsGameProgressModel.prototype.hasPaylineSlotsGameProgress = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional WaySlotsGameProgressModel way_slots_game_progress = 5;
 * @return {?proto.schema.WaySlotsGameProgressModel}
 */
proto.schema.SlotsGameProgressModel.prototype.getWaySlotsGameProgress = function() {
  return /** @type{?proto.schema.WaySlotsGameProgressModel} */ (
    jspb.Message.getWrapperField(this, proto.schema.WaySlotsGameProgressModel, 5));
};


/**
 * @param {?proto.schema.WaySlotsGameProgressModel|undefined} value
 * @return {!proto.schema.SlotsGameProgressModel} returns this
*/
proto.schema.SlotsGameProgressModel.prototype.setWaySlotsGameProgress = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.schema.SlotsGameProgressModel.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.schema.SlotsGameProgressModel} returns this
 */
proto.schema.SlotsGameProgressModel.prototype.clearWaySlotsGameProgress = function() {
  return this.setWaySlotsGameProgress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.schema.SlotsGameProgressModel.prototype.hasWaySlotsGameProgress = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.schema.PaylineSlotsGameProgressModel.repeatedFields_ = [1];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.schema.PaylineSlotsGameProgressModel.oneofGroups_ = [[2]];

/**
 * @enum {number}
 */
proto.schema.PaylineSlotsGameProgressModel.ProgressCase = {
  PROGRESS_NOT_SET: 0,
  ASYMMETRIC_REELS_SLOTS_GAME_PROGRESS: 2
};

/**
 * @return {proto.schema.PaylineSlotsGameProgressModel.ProgressCase}
 */
proto.schema.PaylineSlotsGameProgressModel.prototype.getProgressCase = function() {
  return /** @type {proto.schema.PaylineSlotsGameProgressModel.ProgressCase} */(jspb.Message.computeOneofCase(this, proto.schema.PaylineSlotsGameProgressModel.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.schema.PaylineSlotsGameProgressModel.prototype.toObject = function(opt_includeInstance) {
  return proto.schema.PaylineSlotsGameProgressModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.schema.PaylineSlotsGameProgressModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.PaylineSlotsGameProgressModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    bettingPaylinesList: jspb.Message.toObjectList(msg.getBettingPaylinesList(),
    games_slotsgames_payline_pb.PaylineModel.toObject, includeInstance),
    asymmetricReelsSlotsGameProgress: (f = msg.getAsymmetricReelsSlotsGameProgress()) && proto.schema.AsymmetricReelsSlotsGameProgressModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.schema.PaylineSlotsGameProgressModel}
 */
proto.schema.PaylineSlotsGameProgressModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.schema.PaylineSlotsGameProgressModel;
  return proto.schema.PaylineSlotsGameProgressModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.schema.PaylineSlotsGameProgressModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.schema.PaylineSlotsGameProgressModel}
 */
proto.schema.PaylineSlotsGameProgressModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new games_slotsgames_payline_pb.PaylineModel;
      reader.readMessage(value,games_slotsgames_payline_pb.PaylineModel.deserializeBinaryFromReader);
      msg.addBettingPaylines(value);
      break;
    case 2:
      var value = new proto.schema.AsymmetricReelsSlotsGameProgressModel;
      reader.readMessage(value,proto.schema.AsymmetricReelsSlotsGameProgressModel.deserializeBinaryFromReader);
      msg.setAsymmetricReelsSlotsGameProgress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.schema.PaylineSlotsGameProgressModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.schema.PaylineSlotsGameProgressModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.schema.PaylineSlotsGameProgressModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.PaylineSlotsGameProgressModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBettingPaylinesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      games_slotsgames_payline_pb.PaylineModel.serializeBinaryToWriter
    );
  }
  f = message.getAsymmetricReelsSlotsGameProgress();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.schema.AsymmetricReelsSlotsGameProgressModel.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PaylineModel betting_paylines = 1;
 * @return {!Array<!proto.schema.PaylineModel>}
 */
proto.schema.PaylineSlotsGameProgressModel.prototype.getBettingPaylinesList = function() {
  return /** @type{!Array<!proto.schema.PaylineModel>} */ (
    jspb.Message.getRepeatedWrapperField(this, games_slotsgames_payline_pb.PaylineModel, 1));
};


/**
 * @param {!Array<!proto.schema.PaylineModel>} value
 * @return {!proto.schema.PaylineSlotsGameProgressModel} returns this
*/
proto.schema.PaylineSlotsGameProgressModel.prototype.setBettingPaylinesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.schema.PaylineModel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.schema.PaylineModel}
 */
proto.schema.PaylineSlotsGameProgressModel.prototype.addBettingPaylines = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.schema.PaylineModel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.schema.PaylineSlotsGameProgressModel} returns this
 */
proto.schema.PaylineSlotsGameProgressModel.prototype.clearBettingPaylinesList = function() {
  return this.setBettingPaylinesList([]);
};


/**
 * optional AsymmetricReelsSlotsGameProgressModel asymmetric_reels_slots_game_progress = 2;
 * @return {?proto.schema.AsymmetricReelsSlotsGameProgressModel}
 */
proto.schema.PaylineSlotsGameProgressModel.prototype.getAsymmetricReelsSlotsGameProgress = function() {
  return /** @type{?proto.schema.AsymmetricReelsSlotsGameProgressModel} */ (
    jspb.Message.getWrapperField(this, proto.schema.AsymmetricReelsSlotsGameProgressModel, 2));
};


/**
 * @param {?proto.schema.AsymmetricReelsSlotsGameProgressModel|undefined} value
 * @return {!proto.schema.PaylineSlotsGameProgressModel} returns this
*/
proto.schema.PaylineSlotsGameProgressModel.prototype.setAsymmetricReelsSlotsGameProgress = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.schema.PaylineSlotsGameProgressModel.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.schema.PaylineSlotsGameProgressModel} returns this
 */
proto.schema.PaylineSlotsGameProgressModel.prototype.clearAsymmetricReelsSlotsGameProgress = function() {
  return this.setAsymmetricReelsSlotsGameProgress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.schema.PaylineSlotsGameProgressModel.prototype.hasAsymmetricReelsSlotsGameProgress = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.schema.WaySlotsGameProgressModel.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.schema.WaySlotsGameProgressModel.ProgressCase = {
  PROGRESS_NOT_SET: 0,
  ACCUMULATE_MULTIPLIER_SLOTS_GAME_PROGRESS: 1
};

/**
 * @return {proto.schema.WaySlotsGameProgressModel.ProgressCase}
 */
proto.schema.WaySlotsGameProgressModel.prototype.getProgressCase = function() {
  return /** @type {proto.schema.WaySlotsGameProgressModel.ProgressCase} */(jspb.Message.computeOneofCase(this, proto.schema.WaySlotsGameProgressModel.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.schema.WaySlotsGameProgressModel.prototype.toObject = function(opt_includeInstance) {
  return proto.schema.WaySlotsGameProgressModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.schema.WaySlotsGameProgressModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.WaySlotsGameProgressModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    accumulateMultiplierSlotsGameProgress: (f = msg.getAccumulateMultiplierSlotsGameProgress()) && proto.schema.AccumulateMultiplierSlotsGameProgressModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.schema.WaySlotsGameProgressModel}
 */
proto.schema.WaySlotsGameProgressModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.schema.WaySlotsGameProgressModel;
  return proto.schema.WaySlotsGameProgressModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.schema.WaySlotsGameProgressModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.schema.WaySlotsGameProgressModel}
 */
proto.schema.WaySlotsGameProgressModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.schema.AccumulateMultiplierSlotsGameProgressModel;
      reader.readMessage(value,proto.schema.AccumulateMultiplierSlotsGameProgressModel.deserializeBinaryFromReader);
      msg.setAccumulateMultiplierSlotsGameProgress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.schema.WaySlotsGameProgressModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.schema.WaySlotsGameProgressModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.schema.WaySlotsGameProgressModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.WaySlotsGameProgressModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccumulateMultiplierSlotsGameProgress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.schema.AccumulateMultiplierSlotsGameProgressModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional AccumulateMultiplierSlotsGameProgressModel accumulate_multiplier_slots_game_progress = 1;
 * @return {?proto.schema.AccumulateMultiplierSlotsGameProgressModel}
 */
proto.schema.WaySlotsGameProgressModel.prototype.getAccumulateMultiplierSlotsGameProgress = function() {
  return /** @type{?proto.schema.AccumulateMultiplierSlotsGameProgressModel} */ (
    jspb.Message.getWrapperField(this, proto.schema.AccumulateMultiplierSlotsGameProgressModel, 1));
};


/**
 * @param {?proto.schema.AccumulateMultiplierSlotsGameProgressModel|undefined} value
 * @return {!proto.schema.WaySlotsGameProgressModel} returns this
*/
proto.schema.WaySlotsGameProgressModel.prototype.setAccumulateMultiplierSlotsGameProgress = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.schema.WaySlotsGameProgressModel.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.schema.WaySlotsGameProgressModel} returns this
 */
proto.schema.WaySlotsGameProgressModel.prototype.clearAccumulateMultiplierSlotsGameProgress = function() {
  return this.setAccumulateMultiplierSlotsGameProgress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.schema.WaySlotsGameProgressModel.prototype.hasAccumulateMultiplierSlotsGameProgress = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.schema.AsymmetricReelsSlotsGameProgressModel.prototype.toObject = function(opt_includeInstance) {
  return proto.schema.AsymmetricReelsSlotsGameProgressModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.schema.AsymmetricReelsSlotsGameProgressModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.AsymmetricReelsSlotsGameProgressModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    firstColumnSymbolId: (f = msg.getFirstColumnSymbolId()) && games_slotsgames_symbol_pb.SlotsGameSymbolModel.toObject(includeInstance, f),
    lastColumnSymbolId: (f = msg.getLastColumnSymbolId()) && games_slotsgames_symbol_pb.SlotsGameSymbolModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.schema.AsymmetricReelsSlotsGameProgressModel}
 */
proto.schema.AsymmetricReelsSlotsGameProgressModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.schema.AsymmetricReelsSlotsGameProgressModel;
  return proto.schema.AsymmetricReelsSlotsGameProgressModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.schema.AsymmetricReelsSlotsGameProgressModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.schema.AsymmetricReelsSlotsGameProgressModel}
 */
proto.schema.AsymmetricReelsSlotsGameProgressModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new games_slotsgames_symbol_pb.SlotsGameSymbolModel;
      reader.readMessage(value,games_slotsgames_symbol_pb.SlotsGameSymbolModel.deserializeBinaryFromReader);
      msg.setFirstColumnSymbolId(value);
      break;
    case 2:
      var value = new games_slotsgames_symbol_pb.SlotsGameSymbolModel;
      reader.readMessage(value,games_slotsgames_symbol_pb.SlotsGameSymbolModel.deserializeBinaryFromReader);
      msg.setLastColumnSymbolId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.schema.AsymmetricReelsSlotsGameProgressModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.schema.AsymmetricReelsSlotsGameProgressModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.schema.AsymmetricReelsSlotsGameProgressModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.AsymmetricReelsSlotsGameProgressModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFirstColumnSymbolId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      games_slotsgames_symbol_pb.SlotsGameSymbolModel.serializeBinaryToWriter
    );
  }
  f = message.getLastColumnSymbolId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      games_slotsgames_symbol_pb.SlotsGameSymbolModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional SlotsGameSymbolModel first_column_symbol_id = 1;
 * @return {?proto.schema.SlotsGameSymbolModel}
 */
proto.schema.AsymmetricReelsSlotsGameProgressModel.prototype.getFirstColumnSymbolId = function() {
  return /** @type{?proto.schema.SlotsGameSymbolModel} */ (
    jspb.Message.getWrapperField(this, games_slotsgames_symbol_pb.SlotsGameSymbolModel, 1));
};


/**
 * @param {?proto.schema.SlotsGameSymbolModel|undefined} value
 * @return {!proto.schema.AsymmetricReelsSlotsGameProgressModel} returns this
*/
proto.schema.AsymmetricReelsSlotsGameProgressModel.prototype.setFirstColumnSymbolId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.schema.AsymmetricReelsSlotsGameProgressModel} returns this
 */
proto.schema.AsymmetricReelsSlotsGameProgressModel.prototype.clearFirstColumnSymbolId = function() {
  return this.setFirstColumnSymbolId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.schema.AsymmetricReelsSlotsGameProgressModel.prototype.hasFirstColumnSymbolId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SlotsGameSymbolModel last_column_symbol_id = 2;
 * @return {?proto.schema.SlotsGameSymbolModel}
 */
proto.schema.AsymmetricReelsSlotsGameProgressModel.prototype.getLastColumnSymbolId = function() {
  return /** @type{?proto.schema.SlotsGameSymbolModel} */ (
    jspb.Message.getWrapperField(this, games_slotsgames_symbol_pb.SlotsGameSymbolModel, 2));
};


/**
 * @param {?proto.schema.SlotsGameSymbolModel|undefined} value
 * @return {!proto.schema.AsymmetricReelsSlotsGameProgressModel} returns this
*/
proto.schema.AsymmetricReelsSlotsGameProgressModel.prototype.setLastColumnSymbolId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.schema.AsymmetricReelsSlotsGameProgressModel} returns this
 */
proto.schema.AsymmetricReelsSlotsGameProgressModel.prototype.clearLastColumnSymbolId = function() {
  return this.setLastColumnSymbolId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.schema.AsymmetricReelsSlotsGameProgressModel.prototype.hasLastColumnSymbolId = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.schema.AccumulateMultiplierSlotsGameProgressModel.prototype.toObject = function(opt_includeInstance) {
  return proto.schema.AccumulateMultiplierSlotsGameProgressModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.schema.AccumulateMultiplierSlotsGameProgressModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.AccumulateMultiplierSlotsGameProgressModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    accumulateMultiplier: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.schema.AccumulateMultiplierSlotsGameProgressModel}
 */
proto.schema.AccumulateMultiplierSlotsGameProgressModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.schema.AccumulateMultiplierSlotsGameProgressModel;
  return proto.schema.AccumulateMultiplierSlotsGameProgressModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.schema.AccumulateMultiplierSlotsGameProgressModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.schema.AccumulateMultiplierSlotsGameProgressModel}
 */
proto.schema.AccumulateMultiplierSlotsGameProgressModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAccumulateMultiplier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.schema.AccumulateMultiplierSlotsGameProgressModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.schema.AccumulateMultiplierSlotsGameProgressModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.schema.AccumulateMultiplierSlotsGameProgressModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.AccumulateMultiplierSlotsGameProgressModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccumulateMultiplier();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
};


/**
 * optional double accumulate_multiplier = 1;
 * @return {number}
 */
proto.schema.AccumulateMultiplierSlotsGameProgressModel.prototype.getAccumulateMultiplier = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.schema.AccumulateMultiplierSlotsGameProgressModel} returns this
 */
proto.schema.AccumulateMultiplierSlotsGameProgressModel.prototype.setAccumulateMultiplier = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


goog.object.extend(exports, proto.schema);
