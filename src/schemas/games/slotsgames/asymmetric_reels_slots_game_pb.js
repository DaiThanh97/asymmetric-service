// source: games/slotsgames/asymmetric_reels_slots_game.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.schema.AsymmetricReelsSlotsGameModel', null, global);
goog.exportSymbol('proto.schema.CreateAsymmetricReelsSlotsGameRequest', null, global);
goog.exportSymbol('proto.schema.UpdateAsymmetricReelsSlotsGameRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.schema.AsymmetricReelsSlotsGameModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.schema.AsymmetricReelsSlotsGameModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.schema.AsymmetricReelsSlotsGameModel.displayName = 'proto.schema.AsymmetricReelsSlotsGameModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.schema.CreateAsymmetricReelsSlotsGameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.schema.CreateAsymmetricReelsSlotsGameRequest.repeatedFields_, null);
};
goog.inherits(proto.schema.CreateAsymmetricReelsSlotsGameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.schema.CreateAsymmetricReelsSlotsGameRequest.displayName = 'proto.schema.CreateAsymmetricReelsSlotsGameRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.schema.UpdateAsymmetricReelsSlotsGameRequest.repeatedFields_, null);
};
goog.inherits(proto.schema.UpdateAsymmetricReelsSlotsGameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.schema.UpdateAsymmetricReelsSlotsGameRequest.displayName = 'proto.schema.UpdateAsymmetricReelsSlotsGameRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.schema.AsymmetricReelsSlotsGameModel.prototype.toObject = function(opt_includeInstance) {
  return proto.schema.AsymmetricReelsSlotsGameModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.schema.AsymmetricReelsSlotsGameModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.AsymmetricReelsSlotsGameModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    asymmetricchance: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.schema.AsymmetricReelsSlotsGameModel}
 */
proto.schema.AsymmetricReelsSlotsGameModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.schema.AsymmetricReelsSlotsGameModel;
  return proto.schema.AsymmetricReelsSlotsGameModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.schema.AsymmetricReelsSlotsGameModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.schema.AsymmetricReelsSlotsGameModel}
 */
proto.schema.AsymmetricReelsSlotsGameModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAsymmetricchance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.schema.AsymmetricReelsSlotsGameModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.schema.AsymmetricReelsSlotsGameModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.schema.AsymmetricReelsSlotsGameModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.AsymmetricReelsSlotsGameModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAsymmetricchance();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
};


/**
 * optional double asymmetricChance = 1;
 * @return {number}
 */
proto.schema.AsymmetricReelsSlotsGameModel.prototype.getAsymmetricchance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.schema.AsymmetricReelsSlotsGameModel} returns this
 */
proto.schema.AsymmetricReelsSlotsGameModel.prototype.setAsymmetricchance = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.schema.CreateAsymmetricReelsSlotsGameRequest.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.schema.CreateAsymmetricReelsSlotsGameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.schema.CreateAsymmetricReelsSlotsGameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.schema.CreateAsymmetricReelsSlotsGameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.CreateAsymmetricReelsSlotsGameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    gameName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    availableGoldCoinsBetValuesList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f,
    availableSweepCoinsBetValuesList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 3)) == null ? undefined : f,
    rowCountsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    asymmetricChance: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.schema.CreateAsymmetricReelsSlotsGameRequest}
 */
proto.schema.CreateAsymmetricReelsSlotsGameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.schema.CreateAsymmetricReelsSlotsGameRequest;
  return proto.schema.CreateAsymmetricReelsSlotsGameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.schema.CreateAsymmetricReelsSlotsGameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.schema.CreateAsymmetricReelsSlotsGameRequest}
 */
proto.schema.CreateAsymmetricReelsSlotsGameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameName(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addAvailableGoldCoinsBetValues(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addAvailableSweepCoinsBetValues(values[i]);
      }
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRowCounts(values[i]);
      }
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAsymmetricChance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.schema.CreateAsymmetricReelsSlotsGameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.schema.CreateAsymmetricReelsSlotsGameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.schema.CreateAsymmetricReelsSlotsGameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.CreateAsymmetricReelsSlotsGameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGameName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAvailableGoldCoinsBetValuesList();
  if (f.length > 0) {
    writer.writePackedDouble(
      2,
      f
    );
  }
  f = message.getAvailableSweepCoinsBetValuesList();
  if (f.length > 0) {
    writer.writePackedDouble(
      3,
      f
    );
  }
  f = message.getRowCountsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      4,
      f
    );
  }
  f = message.getAsymmetricChance();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
};


/**
 * optional string game_name = 1;
 * @return {string}
 */
proto.schema.CreateAsymmetricReelsSlotsGameRequest.prototype.getGameName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.schema.CreateAsymmetricReelsSlotsGameRequest} returns this
 */
proto.schema.CreateAsymmetricReelsSlotsGameRequest.prototype.setGameName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated double available_gold_coins_bet_values = 2;
 * @return {!Array<number>}
 */
proto.schema.CreateAsymmetricReelsSlotsGameRequest.prototype.getAvailableGoldCoinsBetValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.schema.CreateAsymmetricReelsSlotsGameRequest} returns this
 */
proto.schema.CreateAsymmetricReelsSlotsGameRequest.prototype.setAvailableGoldCoinsBetValuesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.schema.CreateAsymmetricReelsSlotsGameRequest} returns this
 */
proto.schema.CreateAsymmetricReelsSlotsGameRequest.prototype.addAvailableGoldCoinsBetValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.schema.CreateAsymmetricReelsSlotsGameRequest} returns this
 */
proto.schema.CreateAsymmetricReelsSlotsGameRequest.prototype.clearAvailableGoldCoinsBetValuesList = function() {
  return this.setAvailableGoldCoinsBetValuesList([]);
};


/**
 * repeated double available_sweep_coins_bet_values = 3;
 * @return {!Array<number>}
 */
proto.schema.CreateAsymmetricReelsSlotsGameRequest.prototype.getAvailableSweepCoinsBetValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.schema.CreateAsymmetricReelsSlotsGameRequest} returns this
 */
proto.schema.CreateAsymmetricReelsSlotsGameRequest.prototype.setAvailableSweepCoinsBetValuesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.schema.CreateAsymmetricReelsSlotsGameRequest} returns this
 */
proto.schema.CreateAsymmetricReelsSlotsGameRequest.prototype.addAvailableSweepCoinsBetValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.schema.CreateAsymmetricReelsSlotsGameRequest} returns this
 */
proto.schema.CreateAsymmetricReelsSlotsGameRequest.prototype.clearAvailableSweepCoinsBetValuesList = function() {
  return this.setAvailableSweepCoinsBetValuesList([]);
};


/**
 * repeated int32 row_counts = 4;
 * @return {!Array<number>}
 */
proto.schema.CreateAsymmetricReelsSlotsGameRequest.prototype.getRowCountsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.schema.CreateAsymmetricReelsSlotsGameRequest} returns this
 */
proto.schema.CreateAsymmetricReelsSlotsGameRequest.prototype.setRowCountsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.schema.CreateAsymmetricReelsSlotsGameRequest} returns this
 */
proto.schema.CreateAsymmetricReelsSlotsGameRequest.prototype.addRowCounts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.schema.CreateAsymmetricReelsSlotsGameRequest} returns this
 */
proto.schema.CreateAsymmetricReelsSlotsGameRequest.prototype.clearRowCountsList = function() {
  return this.setRowCountsList([]);
};


/**
 * optional double asymmetric_chance = 5;
 * @return {number}
 */
proto.schema.CreateAsymmetricReelsSlotsGameRequest.prototype.getAsymmetricChance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.schema.CreateAsymmetricReelsSlotsGameRequest} returns this
 */
proto.schema.CreateAsymmetricReelsSlotsGameRequest.prototype.setAsymmetricChance = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.repeatedFields_ = [3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.schema.UpdateAsymmetricReelsSlotsGameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.schema.UpdateAsymmetricReelsSlotsGameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    gameId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gameName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    availableGoldCoinsBetValuesList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 3)) == null ? undefined : f,
    availableSweepCoinsBetValuesList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 4)) == null ? undefined : f,
    rowCountsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    asymmetricChance: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.schema.UpdateAsymmetricReelsSlotsGameRequest}
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.schema.UpdateAsymmetricReelsSlotsGameRequest;
  return proto.schema.UpdateAsymmetricReelsSlotsGameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.schema.UpdateAsymmetricReelsSlotsGameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.schema.UpdateAsymmetricReelsSlotsGameRequest}
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameName(value);
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addAvailableGoldCoinsBetValues(values[i]);
      }
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addAvailableSweepCoinsBetValues(values[i]);
      }
      break;
    case 5:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRowCounts(values[i]);
      }
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAsymmetricChance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.schema.UpdateAsymmetricReelsSlotsGameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.schema.UpdateAsymmetricReelsSlotsGameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGameId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGameName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAvailableGoldCoinsBetValuesList();
  if (f.length > 0) {
    writer.writePackedDouble(
      3,
      f
    );
  }
  f = message.getAvailableSweepCoinsBetValuesList();
  if (f.length > 0) {
    writer.writePackedDouble(
      4,
      f
    );
  }
  f = message.getRowCountsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      5,
      f
    );
  }
  f = message.getAsymmetricChance();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional string game_id = 1;
 * @return {string}
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.prototype.getGameId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.schema.UpdateAsymmetricReelsSlotsGameRequest} returns this
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.prototype.setGameId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string game_name = 2;
 * @return {string}
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.prototype.getGameName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.schema.UpdateAsymmetricReelsSlotsGameRequest} returns this
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.prototype.setGameName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated double available_gold_coins_bet_values = 3;
 * @return {!Array<number>}
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.prototype.getAvailableGoldCoinsBetValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.schema.UpdateAsymmetricReelsSlotsGameRequest} returns this
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.prototype.setAvailableGoldCoinsBetValuesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.schema.UpdateAsymmetricReelsSlotsGameRequest} returns this
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.prototype.addAvailableGoldCoinsBetValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.schema.UpdateAsymmetricReelsSlotsGameRequest} returns this
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.prototype.clearAvailableGoldCoinsBetValuesList = function() {
  return this.setAvailableGoldCoinsBetValuesList([]);
};


/**
 * repeated double available_sweep_coins_bet_values = 4;
 * @return {!Array<number>}
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.prototype.getAvailableSweepCoinsBetValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.schema.UpdateAsymmetricReelsSlotsGameRequest} returns this
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.prototype.setAvailableSweepCoinsBetValuesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.schema.UpdateAsymmetricReelsSlotsGameRequest} returns this
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.prototype.addAvailableSweepCoinsBetValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.schema.UpdateAsymmetricReelsSlotsGameRequest} returns this
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.prototype.clearAvailableSweepCoinsBetValuesList = function() {
  return this.setAvailableSweepCoinsBetValuesList([]);
};


/**
 * repeated int32 row_counts = 5;
 * @return {!Array<number>}
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.prototype.getRowCountsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.schema.UpdateAsymmetricReelsSlotsGameRequest} returns this
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.prototype.setRowCountsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.schema.UpdateAsymmetricReelsSlotsGameRequest} returns this
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.prototype.addRowCounts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.schema.UpdateAsymmetricReelsSlotsGameRequest} returns this
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.prototype.clearRowCountsList = function() {
  return this.setRowCountsList([]);
};


/**
 * optional double asymmetric_chance = 6;
 * @return {number}
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.prototype.getAsymmetricChance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.schema.UpdateAsymmetricReelsSlotsGameRequest} returns this
 */
proto.schema.UpdateAsymmetricReelsSlotsGameRequest.prototype.setAsymmetricChance = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


goog.object.extend(exports, proto.schema);
