// source: games/slotsgames/game_result.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var games_slotsgames_symbol_pb = require('../../games/slotsgames/symbol_pb.js');
goog.object.extend(proto, games_slotsgames_symbol_pb);
var games_slotsgames_payline_pb = require('../../games/slotsgames/payline_pb.js');
goog.object.extend(proto, games_slotsgames_payline_pb);
goog.exportSymbol('proto.schema.AccumulateMultiplierSlotsGameResultModel', null, global);
goog.exportSymbol('proto.schema.AsymmetricReelsSlotsGameResultModel', null, global);
goog.exportSymbol('proto.schema.PaylineSlotsGameResultModel', null, global);
goog.exportSymbol('proto.schema.PaylineSlotsGameResultModel.ResultCase', null, global);
goog.exportSymbol('proto.schema.SlotsGameResultModel', null, global);
goog.exportSymbol('proto.schema.SlotsGameResultModel.ResultCase', null, global);
goog.exportSymbol('proto.schema.WaySlotsGameResultModel', null, global);
goog.exportSymbol('proto.schema.WaySlotsGameResultModel.ResultCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.schema.SlotsGameResultModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.schema.SlotsGameResultModel.repeatedFields_, proto.schema.SlotsGameResultModel.oneofGroups_);
};
goog.inherits(proto.schema.SlotsGameResultModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.schema.SlotsGameResultModel.displayName = 'proto.schema.SlotsGameResultModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.schema.PaylineSlotsGameResultModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.schema.PaylineSlotsGameResultModel.repeatedFields_, proto.schema.PaylineSlotsGameResultModel.oneofGroups_);
};
goog.inherits(proto.schema.PaylineSlotsGameResultModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.schema.PaylineSlotsGameResultModel.displayName = 'proto.schema.PaylineSlotsGameResultModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.schema.WaySlotsGameResultModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.schema.WaySlotsGameResultModel.oneofGroups_);
};
goog.inherits(proto.schema.WaySlotsGameResultModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.schema.WaySlotsGameResultModel.displayName = 'proto.schema.WaySlotsGameResultModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.schema.AsymmetricReelsSlotsGameResultModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.schema.AsymmetricReelsSlotsGameResultModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.schema.AsymmetricReelsSlotsGameResultModel.displayName = 'proto.schema.AsymmetricReelsSlotsGameResultModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.schema.AccumulateMultiplierSlotsGameResultModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.schema.AccumulateMultiplierSlotsGameResultModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.schema.AccumulateMultiplierSlotsGameResultModel.displayName = 'proto.schema.AccumulateMultiplierSlotsGameResultModel';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.schema.SlotsGameResultModel.repeatedFields_ = [1];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.schema.SlotsGameResultModel.oneofGroups_ = [[4,5]];

/**
 * @enum {number}
 */
proto.schema.SlotsGameResultModel.ResultCase = {
  RESULT_NOT_SET: 0,
  PAYLINE_SLOTS_GAME_RESULT: 4,
  WAY_SLOTS_GAME_RESULT: 5
};

/**
 * @return {proto.schema.SlotsGameResultModel.ResultCase}
 */
proto.schema.SlotsGameResultModel.prototype.getResultCase = function() {
  return /** @type {proto.schema.SlotsGameResultModel.ResultCase} */(jspb.Message.computeOneofCase(this, proto.schema.SlotsGameResultModel.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.schema.SlotsGameResultModel.prototype.toObject = function(opt_includeInstance) {
  return proto.schema.SlotsGameResultModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.schema.SlotsGameResultModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.SlotsGameResultModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    slotsMatrixList: jspb.Message.toObjectList(msg.getSlotsMatrixList(),
    games_slotsgames_symbol_pb.SlotsGameSymbolModel.toObject, includeInstance),
    wonMoney: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    jackpotWon: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    paylineSlotsGameResult: (f = msg.getPaylineSlotsGameResult()) && proto.schema.PaylineSlotsGameResultModel.toObject(includeInstance, f),
    waySlotsGameResult: (f = msg.getWaySlotsGameResult()) && proto.schema.WaySlotsGameResultModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.schema.SlotsGameResultModel}
 */
proto.schema.SlotsGameResultModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.schema.SlotsGameResultModel;
  return proto.schema.SlotsGameResultModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.schema.SlotsGameResultModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.schema.SlotsGameResultModel}
 */
proto.schema.SlotsGameResultModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new games_slotsgames_symbol_pb.SlotsGameSymbolModel;
      reader.readMessage(value,games_slotsgames_symbol_pb.SlotsGameSymbolModel.deserializeBinaryFromReader);
      msg.addSlotsMatrix(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWonMoney(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setJackpotWon(value);
      break;
    case 4:
      var value = new proto.schema.PaylineSlotsGameResultModel;
      reader.readMessage(value,proto.schema.PaylineSlotsGameResultModel.deserializeBinaryFromReader);
      msg.setPaylineSlotsGameResult(value);
      break;
    case 5:
      var value = new proto.schema.WaySlotsGameResultModel;
      reader.readMessage(value,proto.schema.WaySlotsGameResultModel.deserializeBinaryFromReader);
      msg.setWaySlotsGameResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.schema.SlotsGameResultModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.schema.SlotsGameResultModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.schema.SlotsGameResultModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.SlotsGameResultModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlotsMatrixList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      games_slotsgames_symbol_pb.SlotsGameSymbolModel.serializeBinaryToWriter
    );
  }
  f = message.getWonMoney();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getJackpotWon();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getPaylineSlotsGameResult();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.schema.PaylineSlotsGameResultModel.serializeBinaryToWriter
    );
  }
  f = message.getWaySlotsGameResult();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.schema.WaySlotsGameResultModel.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SlotsGameSymbolModel slots_matrix = 1;
 * @return {!Array<!proto.schema.SlotsGameSymbolModel>}
 */
proto.schema.SlotsGameResultModel.prototype.getSlotsMatrixList = function() {
  return /** @type{!Array<!proto.schema.SlotsGameSymbolModel>} */ (
    jspb.Message.getRepeatedWrapperField(this, games_slotsgames_symbol_pb.SlotsGameSymbolModel, 1));
};


/**
 * @param {!Array<!proto.schema.SlotsGameSymbolModel>} value
 * @return {!proto.schema.SlotsGameResultModel} returns this
*/
proto.schema.SlotsGameResultModel.prototype.setSlotsMatrixList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.schema.SlotsGameSymbolModel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.schema.SlotsGameSymbolModel}
 */
proto.schema.SlotsGameResultModel.prototype.addSlotsMatrix = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.schema.SlotsGameSymbolModel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.schema.SlotsGameResultModel} returns this
 */
proto.schema.SlotsGameResultModel.prototype.clearSlotsMatrixList = function() {
  return this.setSlotsMatrixList([]);
};


/**
 * optional double won_money = 2;
 * @return {number}
 */
proto.schema.SlotsGameResultModel.prototype.getWonMoney = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.schema.SlotsGameResultModel} returns this
 */
proto.schema.SlotsGameResultModel.prototype.setWonMoney = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional bool jackpot_won = 3;
 * @return {boolean}
 */
proto.schema.SlotsGameResultModel.prototype.getJackpotWon = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.schema.SlotsGameResultModel} returns this
 */
proto.schema.SlotsGameResultModel.prototype.setJackpotWon = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional PaylineSlotsGameResultModel payline_slots_game_result = 4;
 * @return {?proto.schema.PaylineSlotsGameResultModel}
 */
proto.schema.SlotsGameResultModel.prototype.getPaylineSlotsGameResult = function() {
  return /** @type{?proto.schema.PaylineSlotsGameResultModel} */ (
    jspb.Message.getWrapperField(this, proto.schema.PaylineSlotsGameResultModel, 4));
};


/**
 * @param {?proto.schema.PaylineSlotsGameResultModel|undefined} value
 * @return {!proto.schema.SlotsGameResultModel} returns this
*/
proto.schema.SlotsGameResultModel.prototype.setPaylineSlotsGameResult = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.schema.SlotsGameResultModel.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.schema.SlotsGameResultModel} returns this
 */
proto.schema.SlotsGameResultModel.prototype.clearPaylineSlotsGameResult = function() {
  return this.setPaylineSlotsGameResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.schema.SlotsGameResultModel.prototype.hasPaylineSlotsGameResult = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional WaySlotsGameResultModel way_slots_game_result = 5;
 * @return {?proto.schema.WaySlotsGameResultModel}
 */
proto.schema.SlotsGameResultModel.prototype.getWaySlotsGameResult = function() {
  return /** @type{?proto.schema.WaySlotsGameResultModel} */ (
    jspb.Message.getWrapperField(this, proto.schema.WaySlotsGameResultModel, 5));
};


/**
 * @param {?proto.schema.WaySlotsGameResultModel|undefined} value
 * @return {!proto.schema.SlotsGameResultModel} returns this
*/
proto.schema.SlotsGameResultModel.prototype.setWaySlotsGameResult = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.schema.SlotsGameResultModel.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.schema.SlotsGameResultModel} returns this
 */
proto.schema.SlotsGameResultModel.prototype.clearWaySlotsGameResult = function() {
  return this.setWaySlotsGameResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.schema.SlotsGameResultModel.prototype.hasWaySlotsGameResult = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.schema.PaylineSlotsGameResultModel.repeatedFields_ = [1];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.schema.PaylineSlotsGameResultModel.oneofGroups_ = [[2]];

/**
 * @enum {number}
 */
proto.schema.PaylineSlotsGameResultModel.ResultCase = {
  RESULT_NOT_SET: 0,
  ASYMMETRIC_REELS_SLOTS_GAME_RESULT: 2
};

/**
 * @return {proto.schema.PaylineSlotsGameResultModel.ResultCase}
 */
proto.schema.PaylineSlotsGameResultModel.prototype.getResultCase = function() {
  return /** @type {proto.schema.PaylineSlotsGameResultModel.ResultCase} */(jspb.Message.computeOneofCase(this, proto.schema.PaylineSlotsGameResultModel.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.schema.PaylineSlotsGameResultModel.prototype.toObject = function(opt_includeInstance) {
  return proto.schema.PaylineSlotsGameResultModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.schema.PaylineSlotsGameResultModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.PaylineSlotsGameResultModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    wonPaylinesList: jspb.Message.toObjectList(msg.getWonPaylinesList(),
    games_slotsgames_payline_pb.PaylineModel.toObject, includeInstance),
    asymmetricReelsSlotsGameResult: (f = msg.getAsymmetricReelsSlotsGameResult()) && proto.schema.AsymmetricReelsSlotsGameResultModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.schema.PaylineSlotsGameResultModel}
 */
proto.schema.PaylineSlotsGameResultModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.schema.PaylineSlotsGameResultModel;
  return proto.schema.PaylineSlotsGameResultModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.schema.PaylineSlotsGameResultModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.schema.PaylineSlotsGameResultModel}
 */
proto.schema.PaylineSlotsGameResultModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new games_slotsgames_payline_pb.PaylineModel;
      reader.readMessage(value,games_slotsgames_payline_pb.PaylineModel.deserializeBinaryFromReader);
      msg.addWonPaylines(value);
      break;
    case 2:
      var value = new proto.schema.AsymmetricReelsSlotsGameResultModel;
      reader.readMessage(value,proto.schema.AsymmetricReelsSlotsGameResultModel.deserializeBinaryFromReader);
      msg.setAsymmetricReelsSlotsGameResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.schema.PaylineSlotsGameResultModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.schema.PaylineSlotsGameResultModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.schema.PaylineSlotsGameResultModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.PaylineSlotsGameResultModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWonPaylinesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      games_slotsgames_payline_pb.PaylineModel.serializeBinaryToWriter
    );
  }
  f = message.getAsymmetricReelsSlotsGameResult();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.schema.AsymmetricReelsSlotsGameResultModel.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PaylineModel won_paylines = 1;
 * @return {!Array<!proto.schema.PaylineModel>}
 */
proto.schema.PaylineSlotsGameResultModel.prototype.getWonPaylinesList = function() {
  return /** @type{!Array<!proto.schema.PaylineModel>} */ (
    jspb.Message.getRepeatedWrapperField(this, games_slotsgames_payline_pb.PaylineModel, 1));
};


/**
 * @param {!Array<!proto.schema.PaylineModel>} value
 * @return {!proto.schema.PaylineSlotsGameResultModel} returns this
*/
proto.schema.PaylineSlotsGameResultModel.prototype.setWonPaylinesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.schema.PaylineModel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.schema.PaylineModel}
 */
proto.schema.PaylineSlotsGameResultModel.prototype.addWonPaylines = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.schema.PaylineModel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.schema.PaylineSlotsGameResultModel} returns this
 */
proto.schema.PaylineSlotsGameResultModel.prototype.clearWonPaylinesList = function() {
  return this.setWonPaylinesList([]);
};


/**
 * optional AsymmetricReelsSlotsGameResultModel asymmetric_reels_slots_game_result = 2;
 * @return {?proto.schema.AsymmetricReelsSlotsGameResultModel}
 */
proto.schema.PaylineSlotsGameResultModel.prototype.getAsymmetricReelsSlotsGameResult = function() {
  return /** @type{?proto.schema.AsymmetricReelsSlotsGameResultModel} */ (
    jspb.Message.getWrapperField(this, proto.schema.AsymmetricReelsSlotsGameResultModel, 2));
};


/**
 * @param {?proto.schema.AsymmetricReelsSlotsGameResultModel|undefined} value
 * @return {!proto.schema.PaylineSlotsGameResultModel} returns this
*/
proto.schema.PaylineSlotsGameResultModel.prototype.setAsymmetricReelsSlotsGameResult = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.schema.PaylineSlotsGameResultModel.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.schema.PaylineSlotsGameResultModel} returns this
 */
proto.schema.PaylineSlotsGameResultModel.prototype.clearAsymmetricReelsSlotsGameResult = function() {
  return this.setAsymmetricReelsSlotsGameResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.schema.PaylineSlotsGameResultModel.prototype.hasAsymmetricReelsSlotsGameResult = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.schema.WaySlotsGameResultModel.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.schema.WaySlotsGameResultModel.ResultCase = {
  RESULT_NOT_SET: 0,
  ACCUMULATE_MULTIPLIER_SLOTS_GAME_RESULT: 1
};

/**
 * @return {proto.schema.WaySlotsGameResultModel.ResultCase}
 */
proto.schema.WaySlotsGameResultModel.prototype.getResultCase = function() {
  return /** @type {proto.schema.WaySlotsGameResultModel.ResultCase} */(jspb.Message.computeOneofCase(this, proto.schema.WaySlotsGameResultModel.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.schema.WaySlotsGameResultModel.prototype.toObject = function(opt_includeInstance) {
  return proto.schema.WaySlotsGameResultModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.schema.WaySlotsGameResultModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.WaySlotsGameResultModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    accumulateMultiplierSlotsGameResult: (f = msg.getAccumulateMultiplierSlotsGameResult()) && proto.schema.AccumulateMultiplierSlotsGameResultModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.schema.WaySlotsGameResultModel}
 */
proto.schema.WaySlotsGameResultModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.schema.WaySlotsGameResultModel;
  return proto.schema.WaySlotsGameResultModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.schema.WaySlotsGameResultModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.schema.WaySlotsGameResultModel}
 */
proto.schema.WaySlotsGameResultModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.schema.AccumulateMultiplierSlotsGameResultModel;
      reader.readMessage(value,proto.schema.AccumulateMultiplierSlotsGameResultModel.deserializeBinaryFromReader);
      msg.setAccumulateMultiplierSlotsGameResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.schema.WaySlotsGameResultModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.schema.WaySlotsGameResultModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.schema.WaySlotsGameResultModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.WaySlotsGameResultModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccumulateMultiplierSlotsGameResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.schema.AccumulateMultiplierSlotsGameResultModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional AccumulateMultiplierSlotsGameResultModel accumulate_multiplier_slots_game_result = 1;
 * @return {?proto.schema.AccumulateMultiplierSlotsGameResultModel}
 */
proto.schema.WaySlotsGameResultModel.prototype.getAccumulateMultiplierSlotsGameResult = function() {
  return /** @type{?proto.schema.AccumulateMultiplierSlotsGameResultModel} */ (
    jspb.Message.getWrapperField(this, proto.schema.AccumulateMultiplierSlotsGameResultModel, 1));
};


/**
 * @param {?proto.schema.AccumulateMultiplierSlotsGameResultModel|undefined} value
 * @return {!proto.schema.WaySlotsGameResultModel} returns this
*/
proto.schema.WaySlotsGameResultModel.prototype.setAccumulateMultiplierSlotsGameResult = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.schema.WaySlotsGameResultModel.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.schema.WaySlotsGameResultModel} returns this
 */
proto.schema.WaySlotsGameResultModel.prototype.clearAccumulateMultiplierSlotsGameResult = function() {
  return this.setAccumulateMultiplierSlotsGameResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.schema.WaySlotsGameResultModel.prototype.hasAccumulateMultiplierSlotsGameResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.schema.AsymmetricReelsSlotsGameResultModel.prototype.toObject = function(opt_includeInstance) {
  return proto.schema.AsymmetricReelsSlotsGameResultModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.schema.AsymmetricReelsSlotsGameResultModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.AsymmetricReelsSlotsGameResultModel.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.schema.AsymmetricReelsSlotsGameResultModel}
 */
proto.schema.AsymmetricReelsSlotsGameResultModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.schema.AsymmetricReelsSlotsGameResultModel;
  return proto.schema.AsymmetricReelsSlotsGameResultModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.schema.AsymmetricReelsSlotsGameResultModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.schema.AsymmetricReelsSlotsGameResultModel}
 */
proto.schema.AsymmetricReelsSlotsGameResultModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.schema.AsymmetricReelsSlotsGameResultModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.schema.AsymmetricReelsSlotsGameResultModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.schema.AsymmetricReelsSlotsGameResultModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.AsymmetricReelsSlotsGameResultModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.schema.AccumulateMultiplierSlotsGameResultModel.prototype.toObject = function(opt_includeInstance) {
  return proto.schema.AccumulateMultiplierSlotsGameResultModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.schema.AccumulateMultiplierSlotsGameResultModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.AccumulateMultiplierSlotsGameResultModel.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.schema.AccumulateMultiplierSlotsGameResultModel}
 */
proto.schema.AccumulateMultiplierSlotsGameResultModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.schema.AccumulateMultiplierSlotsGameResultModel;
  return proto.schema.AccumulateMultiplierSlotsGameResultModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.schema.AccumulateMultiplierSlotsGameResultModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.schema.AccumulateMultiplierSlotsGameResultModel}
 */
proto.schema.AccumulateMultiplierSlotsGameResultModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.schema.AccumulateMultiplierSlotsGameResultModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.schema.AccumulateMultiplierSlotsGameResultModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.schema.AccumulateMultiplierSlotsGameResultModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.AccumulateMultiplierSlotsGameResultModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.schema);
